Домашнее задание
Реализовать пошаговый батлер

Цель:
Научиться реализовывать пошаговые механики с помощью архитектурного паттерны Event Bus


Описание/Пошаговая инструкция выполнения домашнего задания:
Скачайте папку EventBus-Homework.zip в материалах к уроку
Реализуйте прототип игры по техническому заданию (ссылка)
Реализация архитектуры может быть на любом DI фреймворке или кастомном
Убедитесь в работоспособности механик
Выложите проект на github в отдельную ветку в репозитории с дз

Критерии оценки:
Соблюдение паттерна Event Bus
Разделение данных и логики
Разделение игровой логики и логики отрисовки
Реализация очереди анимаций
Визуальные эффекты приветствуются (лежат в AssetPacks)


https://docs.google.com/document/d/1Z_pNRFD0W_70OdseyZSUCARUIBf_-NESoSjAtBst2Lg/edit



Техническое задание

Играют два игрока — красный и синий (красный сверху, синий снизу соответственно).  
У каждого игрока есть 4 героя, которыми он ходит. 
Каждый ход — это атака героя противника. 
Цель игры: уничтожить команду героев противника.


Игроки ходят героями по очереди:
Красный Герой 1
Синий Герой 1
Красный Герой 2
Синий Герой 2
и так далее… 
Герой
Каждый герой имеет атаку и здоровье плюс дополнительную способность.
В процессе хода герой может атаковать противника и нанести ему урон. Если здоровье героя становиться равно нулю, то герой исчезает с поля боя.
Механика атаки
Когда герой наносит урон противнику, то противник наносит ответ атакующему герою. Пример: Герой А имеет 2/3 (атака/здоровье) и атакует Героя Б 1/3. После удара у Героя А статы 2/2, а у Героя Б — 1/1.

Герои одной команды являются союзниками и не могут друг друга атаковать.

Пожиратель

Здоровье: 50
Атака: 3
В конце своего хода наносит рандомному противнику 3 ед урона.

Охотница

Здоровье: 25
Атака: 10
При атаке не получает ответного урона

Тупой Орк

Здоровье: 32
Атака: 8
С 50% вероятностью наносит урон не тому противнику

Лорд Вамп

Здоровье: 22
Атака: 6

После атаки с 50% вероятностью забирает здоровье, которое отнял у героя противника
Паладин

Здоровье: 30
Атака: 30

Божественный щит: В первый раз герой не получает урона. 
После получения урона божественный щит исчезает.

Ледяной маг

Здоровье: 50
Атака: 2
Когда атакует противника, то замораживает его.
Заморозка: замороженный герой пропускает свой ход 1 раз.

Медитатор

Здоровье: 25
Атака: 4
В конце каждого хода героя игрока добавляет 1 ед здоровья рандомному союзнику

Электро

Здоровье: 35
Атака: 7

Каждый раз, когда получает урон, наносит всем 1 ед урона.
Управление
Когда начинается ход героя, то его рамка становиться зеленой.


При нажатии на героя из команды противника активный герой его атакует и наносит ему урон. После этого ход переходит к следующему герою и так пока одна команда не потеряет всех героев.
Основное задание
Необходимо реализовать героев и систему ходов с помощью паттерна Event Bus. 

Интерфейс верстать и программировать не нужно, уже имеются скрипты для отрисовки героев, которые лежат в сборке UI.

Дополнительное задание 2
Необходимо реализовать озвучку героев.

У каждого героя есть звуки:
Начало хода героя — рандомный звук из Hero (Start Turn)
Изменение здоровья, осталось меньше 20% — звук Hero (Low Health)
Использование автоматических абилок перед и после хода Hero (Ability)
Смерть героя — Hero (Death)


Пожелания
Реализовать игровые объекты через сущность и компоненты без атомарного подхода. Сущность — словарь компонентов, компонент — структуры данные как в ECS.
Критерии оценки
1. Соблюдение паттерна Event Bus
2. Разделение данных и логики 
3. Разделение игровой логики и логики отрисовки
4. Реализация очереди анимаций
5. Визуальные эффекты приветствуются (лежат в AssetPacks)

